{"mappings":"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","sources":["public/assets/js/dataStorage.js","public/assets/js/app.js","index.js"],"sourcesContent":["const dataStorage = {\r\n    fromCountryID: '',\r\n    toCountryID: '',\r\n    apiKey: '',\r\n    set fromCurrency(currency){this.fromCountryID = currency},\r\n    set toCurrency(currency){this.toCountryID = currency},\r\n    set apiSecret(value){this.apiKey = value},\r\n    async fetchAllcountries(){\r\n        const getResponse = await fetch(`https://free.currconv.com/api/v7/countries?&apiKey=${this.apiKey}`)\r\n        return await getResponse.json()\r\n    },\r\n    async fetchRate(){\r\n        const getResponse = await fetch(`https://free.currconv.com/api/v7/convert?q=${this.fromCountryID}_${this.toCountryID},${this.toCountryID}_${this.fromCountryID}&compact=ultra&apiKey=${this.apiKey}`)\r\n        return await getResponse.json()\r\n    }\r\n}\r\n\r\nexport default dataStorage","import dataStorage from \"./dataStorage.js\";\r\n\r\nconst app = {\r\n  loadSelectors() {\r\n    const fromAmount = document.querySelector(\"#fromAmount\");\r\n    const fromCountry = document.querySelector(\"#fromCountry\");\r\n    const toAmount = document.querySelector(\"#toAmount\");\r\n    const toCountry = document.querySelector(\"#toCountry\");\r\n    const messageDisplay = document.querySelector(\"#messageDisplay\");\r\n    const currentYear = document.querySelector('#current_year');\r\n    return {\r\n      fromAmount,\r\n      fromCountry,\r\n      toAmount,\r\n      toCountry,\r\n      messageDisplay,\r\n      currentYear\r\n    };\r\n  },\r\n  getInputValues() {\r\n    const { fromAmount, fromCountry, toAmount, toCountry } =\r\n      this.loadSelectors();\r\n    const amountFrom = fromAmount.value;\r\n    const countryFrom = fromCountry.value;\r\n    const amountTo = toAmount.value;\r\n    const countryTo = toCountry.value;\r\n    return { amountFrom, countryFrom, amountTo, countryTo };\r\n  },\r\n  validateInputValues(amountFrom, amountTo) {\r\n    let bool = false;\r\n    let bool1 = false;\r\n    let bool2 = false;\r\n\r\n    if (Boolean(amountFrom)) bool1 = true;\r\n    if (Boolean(amountTo)) bool2 = true;\r\n    if (bool1 || bool2) bool = true;\r\n\r\n    this.displayMessage(bool, \"Please Fill at Least 1 field\");\r\n    return bool;\r\n  },\r\n  takeOnlyInteger(obj) {\r\n    let datam = parseInt(obj.value);\r\n    if (Boolean(datam) == true && datam >= 0) {\r\n      obj.value = datam;\r\n      return true;\r\n    }\r\n    obj.value = \"\";\r\n    return false;\r\n  },\r\n  displayMessage(type, msg) {\r\n    const { messageDisplay } = this.loadSelectors();\r\n    messageDisplay.innerHTML = \"\";\r\n    if (type == false)\r\n      messageDisplay.insertAdjacentHTML(\r\n        \"afterbegin\",\r\n        `<div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\"><strong>${msg}</strong><button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button></div>`\r\n      );\r\n  },\r\n  async currencyConvert(amount, serial) {\r\n    const { countryFrom, countryTo } = this.getInputValues();\r\n\r\n    dataStorage.fromCurrency = countryFrom;\r\n    dataStorage.toCurrency = countryTo;\r\n    if (serial == 1) {\r\n      dataStorage.fromCurrency = countryTo;\r\n      dataStorage.toCurrency = countryFrom;\r\n    }\r\n\r\n    let currencyRate = 1;\r\n    if (countryFrom != countryTo) {\r\n      const currencyRateObject = await dataStorage.fetchRate();\r\n      currencyRate = Object.values(currencyRateObject)[0];\r\n    }\r\n\r\n    let result = 0;\r\n    if (Boolean(parseFloat(amount)) == true && parseFloat(amount) >= 0)\r\n      result = parseFloat(amount) * currencyRate;\r\n    else result = 0 * currencyRate;\r\n\r\n    return parseFloat(result).toFixed(2);\r\n  },\r\n  generateDropdown(obj) {\r\n    const { fromCountry, toCountry } = this.loadSelectors();\r\n    const countriesObject = obj.results;\r\n    const dropDown = Object.values(countriesObject)\r\n      .sort((a, b) => a.id.localeCompare(b.id))\r\n      .map(\r\n        (a) =>\r\n          `<option value=\"${a.currencyId}\" ${\r\n            a.name === \"Bangladesh\" ? \"selected\" : \"\"\r\n          }> ${a.name} (${a.currencyName})</option>`\r\n      )\r\n      .join(\"\");\r\n    fromCountry.innerHTML = \"\";\r\n    toCountry.innerHTML = \"\";\r\n    fromCountry.insertAdjacentHTML(\"afterbegin\", dropDown);\r\n    toCountry.insertAdjacentHTML(\"afterbegin\", dropDown);\r\n  },\r\n  init() {\r\n    dataStorage.apiSecret = \"ac5a9d9ad8e1824834e5\";\r\n    const { fromAmount, fromCountry, toAmount, toCountry, currentYear } =\r\n      this.loadSelectors();\r\n\r\n    const date = new Date();\r\n    currentYear.textContent = date.getFullYear();\r\n\r\n    fromAmount.addEventListener(\"keyup\", async (e) => {\r\n      e.preventDefault();\r\n      this.takeOnlyInteger(fromAmount);\r\n      toAmount.value = this.validateInputValues(fromAmount.value, null)\r\n        ? await this.currencyConvert(fromAmount.value, 0)\r\n        : \"\";\r\n    });\r\n\r\n    toAmount.addEventListener(\"keyup\", async (e) => {\r\n      e.preventDefault();\r\n      this.takeOnlyInteger(toAmount);\r\n      fromAmount.value = this.validateInputValues(toAmount.value, null)\r\n        ? await this.currencyConvert(toAmount.value, 1)\r\n        : \"\";\r\n    });\r\n\r\n    fromCountry.addEventListener(\"change\", async (e) => {\r\n      e.preventDefault();\r\n      const { amountFrom, countryFrom, amountTo, countryTo } =\r\n        this.getInputValues();\r\n      if (this.validateInputValues(amountFrom, amountTo)) {\r\n        dataStorage.fromCurrency = countryFrom;\r\n        dataStorage.toCurrency = countryTo;\r\n        toAmount.value = await this.currencyConvert(amountFrom, 0);\r\n      }\r\n    });\r\n\r\n    toCountry.addEventListener(\"change\", async (e) => {\r\n      e.preventDefault();\r\n      const { amountFrom, countryFrom, amountTo, countryTo } =\r\n        this.getInputValues();\r\n      if (this.validateInputValues(amountFrom, amountTo)) {\r\n        dataStorage.fromCurrency = countryFrom;\r\n        dataStorage.toCurrency = countryTo;\r\n        fromAmount.value = await this.currencyConvert(amountTo, 1);\r\n      }\r\n    });\r\n\r\n    document.addEventListener(\"DOMContentLoaded\", async (e) => {\r\n      e.preventDefault();\r\n      const countryListObject = await dataStorage.fetchAllcountries();\r\n      this.generateDropdown(countryListObject);\r\n    });\r\n  },\r\n};\r\n\r\nexport default app;\r\n","import app from './public/assets/js/app.js'\r\n\r\napp.init()"],"names":["$5f733b26dcdc20ab$export$2e2bcd8739ae039","fromCountryID","toCountryID","apiKey","fromCurrency","currency","this","toCurrency","apiSecret","value","async","getResponse","fetch","json","loadSelectors","fromAmount","document","querySelector","fromCountry","toAmount","toCountry","messageDisplay","currentYear","getInputValues","amountFrom","countryFrom","amountTo","countryTo","validateInputValues","bool","bool1","bool2","Boolean","displayMessage","takeOnlyInteger","obj","datam","parseInt","type","msg","innerHTML","insertAdjacentHTML","amount","serial","currencyRate","currencyRateObject","fetchRate","Object","values","result","parseFloat","toFixed","generateDropdown","countriesObject","results","dropDown","sort","a","b","id","localeCompare","map","currencyId","name","currencyName","join","init","date","Date","textContent","getFullYear","addEventListener","e","preventDefault","currencyConvert","countryListObject","fetchAllcountries"],"version":3,"file":"index.46cfe611.js.map"}